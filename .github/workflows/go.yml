name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14

      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v ./...

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Unit tests
        run: go test -short -timeout 10m -v ./...

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Tests
        env:
          TEST_LICENSE: ${{ secrets.TEST_LICENSE }}
          ARTIFACTORY_VERSION: latest
        run: go test -timeout 45m -v ./... -coverprofile=test.gcov -covermode=count

      - name: Upload coverage report to Codecov.io
        uses: codecov/codecov-action@v1.0.15
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./test.gcov

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.33
        env:
          GOROOT: ""

      - name: Go report card
        uses: creekorful/goreportcard-action@v1.0

  compatibility-test:
    if: ${{ false }}
    name: Compatibility integration tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        artifactory: [ '7.2.1', '7.3.2', '7.4.3', '7.5.7', '7.6.3', '7.7.8', '7.9.2', '7.10.6', '7.11.2' ]
    needs: unit-tests
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod              # Module download cache
            ~/.cache/go-build         # Build cache (Linux)
            ~/Library/Caches/go-build # Build cache (Mac)
            '%LocalAppData%\go-build' # Build cache (Windows)
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Test
        env:
          TEST_LICENSE: ${{ secrets.TEST_LICENSE }}
          ARTIFACTORY_VERSION: ${{ matrix.artifactory }}
        run: go test -run Integration -timeout 30m -v ./test/...
